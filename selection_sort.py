# # Chapter 2 - Selection Sort
# 2.1 You have a list that will require lots of writes, and a few reads; do you use an array or list? | list
# X 2.2 You are building an app to store a list of orders; servers add to the back of the queue, chefs remove from top of it. Should it be an array or linked list? | array. nope. use a list because faster inserts/deletions. Also, adding to the front/removing from back so you don't need random access (aka arrays)
# 2.3 FB keeps list of usernames; when someone logs in, a search is done for their UN. Suppose FB uses binary search that needs random access. Array or list? | array
# 2.4 You use an array to store a list of FB users. What are the downsides of an array for inserts? You're using binary search for logins...What happens when you add new users to an array? | Everything has to shift; using a list would allow for better sequential insert rather than having to shift the location of every succeeding item.
# 2.5 FB actually uses neither linked lists nor arrays. Suppose it uses an array of linked lists. You have an array of 26 slots, each w/ a LL by letter. Adit B signs up and you go to slot 1 in the array and add Adit B to the end of the LL. Now you want to search for Zakhir H. You go to slot 26 and search the LL. Compare this hybrid data structure to arrays and LLs. Slower? Faster for inserts/searching? | Great for sequential within each letter/26 LL;
