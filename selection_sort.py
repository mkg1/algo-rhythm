# # Chapter 2 - Selection Sort
# 2.1 You have a list that will require lots of writes, and a few reads; do you use an array or list? | list (lists have faster write times than arrays)
# X 2.2 You are building an app to store a list of orders; servers add to the back of the queue, chefs remove from top of it. Should it be an array or linked list? | linked list (better than arrays for inserts/deletes; don't need random access (which arrays are good at) since orders will be removed from the top each time.)
# 2.3 FB keeps list of usernames; when someone logs in, a search is done for their UN. Suppose FB uses binary search that needs random access. Array or list? | Arrays - better at random access. This will allow you to get to the middle element of the array instantaneously for binary search to begin.
# 2.4 You use an array to store a list of FB users. What are the downsides of an array for inserts? You're using binary search for logins...What happens when you add new users to an array? | The entire array has to shift to accomodate the new entry or sort the entire array again when a new user is added to the end.
# 2.5 FB actually uses neither linked lists nor arrays. Suppose it uses an array of linked lists. You have an array of 26 slots, each w/ a LL by letter. Adit B signs up and you go to slot 1 in the array and add Adit B to the end of the LL. Now you want to search for Zakhir H. You go to slot 26 and search the LL. Compare this hybrid data structure to arrays and LLs. Slower? Faster for inserts/searching? | For inserting names, this will be faster than an array, but slower than a linked list since you first have to search the array for the letter and then insert into the linked list. For searching, it'll be slower than an array (since you have to find the letter in the array and then search the linked list), but the same amount of time for a linked list, since finding the letter in the array is instantaneous. X wrong....searching will be faster than a linked list and inserting will be same time as a linked list. 
